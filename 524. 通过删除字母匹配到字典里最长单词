给定一个字符串和一个字符串字典，找到字典里面最长的字符串，该字符串可以通过删除给定字符串的某些字符来得到。如果答案不止一个，返回长度最长且字典顺序最小的字符串。如果答案不存在，则返回空字符串。

示例 1:

输入:
s = "abpcplea", d = ["ale","apple","monkey","plea"]

输出: 
"apple"
示例 2:

输入:
s = "abpcplea", d = ["a","b","c"]

输出: 
"a"
说明:

所有输入的字符串只包含小写字母。
字典的大小不会超过 1000。
所有输入的字符串长度不会超过 1000。

class Solution {
public:
    bool helper(string s,string d){
        int sl=s.length();
        int dl=d.length();
        int si=0;
        int di=0;
        while(si<sl&&di<dl){
            if(s[si]==d[di]){
                si++;
                di++;
            }else{
                si++;
            }
        }
        if(di==dl){
            return true;
        }else{
            return false;
        }  
    }
    
    
    string findLongestWord(string s, vector<string>& d) {
        string m;
        if(d.size()==0) return m;
        sort(d.begin(),d.end());
        unordered_map<int,int> map;
        int n=-1;
        for(int i=0;i<d.size();i++){
            if(helper(s,d[i])){
                 map[i]=d[i].length();
                 n=(map[i]>map[n] ? i:n);
            }
        }
        if(n==-1)
            return m;
        else
            return d[n];
    }
};
