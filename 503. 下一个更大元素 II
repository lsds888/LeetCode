给定一个循环数组（最后一个元素的下一个元素是数组的第一个元素），输出每个元素的下一个更大元素。数字 x 的下一个更大的元素是按数组遍历顺序，这个数字之后的第一个比它更大的数，这意味着你应该循环地搜索它的下一个更大的数。如果不存在，则输出 -1。

示例 1:

输入: [1,2,1]
输出: [2,-1,2]
解释: 第一个 1 的下一个更大的数是 2；
数字 2 找不到下一个更大的数； 
第二个 1 的下一个最大的数需要循环搜索，结果也是 2。
注意: 输入数组的长度不会超过 10000。

class Solution {
public:
    vector<int> nextGreaterElements(vector<int>& nums) {
        int n=nums.size();
        vector<int> vec(n,-1);
        for(int i=0;i<n;i++){
            int m=0;
            for(int j=i;j<n-1;j++){
                if(nums[i]<nums[j+1]){
                    vec[i]=nums[j+1];
                    m=1;
                    break;
                }      
            }
            if(m!=1){
                for(int k=0;k<i;k++){
                    if(nums[i]<nums[k]){
                        vec[i]=nums[k];
                        break;
                    }
                }   
            }
        }
        return vec;
    }
};

执行用时：116 ms
已经战胜 48.86 % 的 cpp 提交记录
