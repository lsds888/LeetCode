给定一个数组 candidates 和一个目标数 target ，找出 candidates 中所有可以使数字和为 target 的组合。

candidates 中的每个数字在每个组合中只能使用一次。

说明：

所有数字（包括目标数）都是正整数。
解集不能包含重复的组合。 
示例 1:

输入: candidates = [10,1,2,7,6,1,5], target = 8,
所求解集为:
[
  [1, 7],
  [1, 2, 5],
  [2, 6],
  [1, 1, 6]
]
示例 2:

输入: candidates = [2,5,2,1,2], target = 5,
所求解集为:
[
  [1,2,2],
  [5]
]

class Solution {
public:
    void helper(vector<vector<int>> &res,vector<int> vec,vector<int> candidates,int level,int target){
        if(target==0){
            res.push_back(vec);
            return;
        }else if(target<0){
            return;
        }
        for(int i=level;i<candidates.size();i++){
            vec.push_back(candidates[i]);
            target-=candidates[i];
            helper(res,vec,candidates,i+1,target);
            vec.pop_back();
            target+=candidates[i];
        }
    }
    vector<vector<int>> combinationSum2(vector<int>& candidates, int target) {
        vector<vector<int>> res;
        vector<vector<int>> res1;
        if(candidates.size()==0||target<0){
            return res1;
        }
        vector<int> vec;
        sort(candidates.begin(),candidates.end());
        helper(res,vec,candidates,0,target);
        set<vector<int>> se;
        for(int i=0;i<res.size();i++){
            se.insert(res[i]);
        }
        for(auto i=se.begin();i!=se.end();i++){
            res1.push_back(*i);
        }
        return res1;
    }
};
