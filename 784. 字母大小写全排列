给定一个字符串S，通过将字符串S中的每个字母转变大小写，我们可以获得一个新的字符串。返回所有可能得到的字符串集合。

示例:
输入: S = "a1b2"
输出: ["a1b2", "a1B2", "A1b2", "A1B2"]

输入: S = "3z4"
输出: ["3z4", "3Z4"]

输入: S = "12345"
输出: ["12345"]
注意：

S 的长度不超过12。
S 仅由数字和字母组成。

class Solution {
private:
    vector<string> res;
    void helper(string S,int n){
        if(S.size()==n){
            res.push_back(S);
            return;
        }
        helper(S,n+1);
        if(S[n]>='a'&&S[n]<='z'){
            S[n]=S[n]-'a'+'A';
            helper(S,n+1);
        }else if(S[n]>='A'&&S[n]<='Z'){
            S[n]=S[n]-'A'+'a';
            helper(S,n+1);
        }
    }
public:
    vector<string> letterCasePermutation(string S) {
        helper(S,0);
        return res;
    }
};
