判断一个整数是否是回文数。回文数是指正序（从左向右）和倒序（从右向左）读都是一样的整数。

示例 1:

输入: 121
输出: true
示例 2:

输入: -121
输出: false
解释: 从左向右读, 为 -121 。 从右向左读, 为 121- 。因此它不是一个回文数。
示例 3:

输入: 10
输出: false
解释: 从右向左读, 为 01 。因此它不是一个回文数。
进阶:

你能不将整数转为字符串来解决这个问题吗？

转化为字符串：
class Solution {
public:
    bool isPalindrome(int x) {
        if(x<0)
            return false;
        string str=to_string(x);
        int len=str.size();
        int start=0;
        int end=len-1;
        while(start<end){
            if(str[start]!=str[end]){
                return false;
            }
            start++;
            end--;
        }
        return true;
    }
};


不转化为字符串：
class Solution {
public:
    bool isPalindrome(int x) {
        if(x<0||(x%10==0 && x!=0))
            return false;
        int res=0;
        while(x>res){   //此时res为原数字的一半或者多一位
            res=res*10+x%10;
            x/=10;
        }
        return res==x||res/10==x;
    }
};

