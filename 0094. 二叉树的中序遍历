给定一个二叉树，返回它的中序 遍历。

示例:

输入: [1,null,2,3]
   1
    \
     2
    /
   3

输出: [1,3,2]
进阶: 递归算法很简单，你可以通过迭代算法完成吗？

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<int> inorderTraversal(TreeNode* root) {
        vector<int> vec;
        if(root==NULL) return vec;
        TreeNode* p=root;
        stack<TreeNode*> sta;
        while(!sta.empty()||p){
            while(p){
                sta.push(p);
                p=p->left;
            }
            if(!sta.empty()){
                p=sta.top();
                vec.push_back(p->val);
                sta.pop();
                p=p->right;
            }
        }
        return vec;
    }
};
