给定一个 N 叉树，返回其节点值的层序遍历。 (即从左到右，逐层遍历)。

例如，给定一个 3叉树 :

 



 

返回其层序遍历:

[
     [1],
     [3,2,4],
     [5,6]
]
 

说明:

树的深度不会超过 1000。
树的节点总数不会超过 5000。

/*
// Definition for a Node.
class Node {
public:
    int val;
    vector<Node*> children;

    Node() {}

    Node(int _val, vector<Node*> _children) {
        val = _val;
        children = _children;
    }
};
*/
class Solution {
public:
    vector<vector<int>> levelOrder(Node* root) {
        vector<int> vec;
        vector<vector<int>> res;
        if(root==NULL) return res;
        queue<Node*> q,m;
        q.push(root);
        while(!q.empty()){
            Node* p=q.front();
            vec.push_back(p->val);
            q.pop();
            for(int i=0;i<p->children.size();i++){
                m.push(p->children[i]);
            }
            if(q.empty()){
                res.push_back(vec);
                vec.clear();
                swap(q,m);
            }
        }
        return res;
    }
};

执行用时: 64 ms, 在N-ary Tree Level Order Traversal的C++提交中击败了39.24% 的用户
