给定一个由 '1'（陆地）和 '0'（水）组成的的二维网格，计算岛屿的数量。一个岛被水包围，并且它是通过水平方向或垂直方向上相邻的陆地连接而成的。你可以假设网格的四个边均被水包围。

示例 1:

输入:
11110
11010
11000
00000

输出: 1
示例 2:

输入:
11000
11000
00100
00011

输出: 3

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/number-of-islands
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

class Solution {
public:
    void setoneto2(vector<vector<char>>& grid,int row,int col){
        int h=grid.size();
        int w=grid[0].size();
        if((row<0)||(row>=h)||(col<0)||(col>=w)||(grid[row][col]!='1')){
            return ;
        }
        grid[row][col]='2';
        setoneto2(grid,row+1,col);
        setoneto2(grid,row-1,col);
        setoneto2(grid,row,col+1);
        setoneto2(grid,row,col-1);
    }
    int numIslands(vector<vector<char>>& grid) {
        if(grid.size()==0)
            return 0;
        int h=grid.size();
        int w=grid[0].size();
        int sum=0;
        for(int i=0;i<h;i++){
            for(int j=0;j<w;j++){
                if(grid[i][j]=='1'){
                    sum++;
                    setoneto2(grid,i,j);
                }
            }
        }
        return sum;
    }
};
