/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    int lenlist(ListNode* head){
            ListNode* p=head;
        int n=0;
        while(p){
            n++;
            p=p->next;
        }
        return n;
    }
    ListNode* listk(ListNode* head,int k){
        if(head==NULL||k<0) return NULL;
 
        ListNode* slow=head;
        ListNode* fast=head;
        for(int i=0;i<k;i++){
            fast=fast->next;
        }
        while(fast->next){
            slow=slow->next;
            fast=fast->next;
        }
        return slow;
    }
    
    ListNode* rotateRight(ListNode* head, int k) {
        if(head==NULL) return head;
        int len=lenlist(head);
        k%=len;
        if(len<=1||k==0) return head;
        ListNode* Lk=listk(head,k);
        ListNode* temp=head;
        head=Lk->next;
        Lk->next=NULL;
        ListNode* temp1=head;
        while(temp1->next){
            temp1=temp1->next;
        }
        temp1->next=temp;
        return head;
    }
};
