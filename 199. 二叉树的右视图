给定一棵二叉树，想象自己站在它的右侧，按照从顶部到底部的顺序，返回从右侧所能看到的节点值。

示例:

输入: [1,2,3,null,5,null,4]
输出: [1, 3, 4]
解释:

   1            <---
 /   \
2     3         <---
 \     \
  5     4       <---
  
  
  /**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<int> vec;
    vector<int> rightSideView(TreeNode* root) {
        int n=deep(root);
        if(n==0) return vec;
        vec=vector<int>(n,0);
        pr(root,0);
        return vec;
    }
    int deep(TreeNode* root){
        if(root==NULL)
            return 0;
        return max(deep(root->left),deep(root->right))+1;
    }
    void pr(TreeNode* root,int deeps){
        if(root==NULL) return;
        vec[deeps]=root->val;
        pr(root->left,deeps+1);
        pr(root->right,deeps+1);
    }
};
