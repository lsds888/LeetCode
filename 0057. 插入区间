给出一个无重叠的 ，按照区间起始端点排序的区间列表。

在列表中插入一个新的区间，你需要确保列表中的区间仍然有序且不重叠（如果有必要的话，可以合并区间）。

示例 1:

输入: intervals = [[1,3],[6,9]], newInterval = [2,5]
输出: [[1,5],[6,9]]
示例 2:

输入: intervals = [[1,2],[3,5],[6,7],[8,10],[12,16]], newInterval = [4,8]
输出: [[1,2],[3,10],[12,16]]
解释: 这是因为新的区间 [4,8] 与 [3,5],[6,7],[8,10] 重叠。

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/insert-interval
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

class Solution {
public:
    vector<vector<int>> insert(vector<vector<int>>& intervals, vector<int>& newInterval) {
        int n=intervals.size();
        vector<vector<int>> res;
        if(n==0){
            res.push_back(newInterval);
            return res;
        }
        int cur=0;
        while(cur<n&&intervals[cur][1]<newInterval[0]){
            res.push_back(intervals[cur++]);
        }
        while(cur<n&&intervals[cur][0]<=newInterval[1]){
            newInterval[0]=min(newInterval[0],intervals[cur][0]);
            newInterval[1]=max(newInterval[1],intervals[cur][1]);
            cur++;
        }
        res.push_back(newInterval);
        while(cur<n){
            res.push_back(intervals[cur++]);
        }
        return res;
    }
};
