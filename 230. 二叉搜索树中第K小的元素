/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    void inorder(TreeNode* root,vector<int> &v){
        if(!root){
            return;
        }
        inorder(root->left,v);
        v.push_back(root->val);
        inorder(root->right,v);
    }
    int kthSmallest(TreeNode* root, int k) {
        vector<int> vec;
        inorder(root,vec);
        return vec[k-1];
    }
};




非递归中序遍历

class Solution {
public:
    TreeNode* KthNode(TreeNode* pRoot, int k)
    {
        vector<TreeNode*> vec;
        stack<TreeNode*> sta;
        TreeNode* p=pRoot;
        while(!sta.empty()||p){
            while(p){
                sta.push(p);
                p=p->left;
            }
            if(!sta.empty()){
                p=sta.top();
                sta.pop();
                vec.push_back(p);
                if(vec.size()==k)
                    return p;
                p=p->right;
            }
        }
        return NULL;
    }
};

