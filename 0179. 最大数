给定一组非负整数，重新排列它们的顺序使之组成一个最大的整数。

示例 1:

输入: [10,2]
输出: 210
示例 2:

输入: [3,30,34,5,9]
输出: 9534330
说明: 输出结果可能非常大，所以你需要返回一个字符串而不是整数。


组成最大数应使得高位数字尽量大，所以首先按照高位数字从大到小对数组排序，然后一次从高位到低位组成最大数。注意若数组全为0，则直接返回一个0.

class Solution {
public:
    static bool helper(string s,string m){
        return s+m > m+s;
    }
    string largestNumber(vector<int>& nums) {
        vector<string> vec;
        for(int i=0;i<nums.size();i++){
            vec.push_back(to_string(nums[i]));
        }
        sort(vec.begin(),vec.end(),helper);
        if(vec.size()&&vec[0]=="0") return "0";
        string s;
        for(int i=0;i<vec.size();i++){
            s+=vec[i];
        }
        return s;
    }
};
