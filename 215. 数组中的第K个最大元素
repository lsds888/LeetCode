在未排序的数组中找到第 k 个最大的元素。请注意，你需要找的是数组排序后的第 k 个最大的元素，而不是第 k 个不同的元素。

示例 1:

输入: [3,2,1,5,6,4] 和 k = 2
输出: 5
示例 2:

输入: [3,2,3,1,2,4,5,5,6] 和 k = 4
输出: 4

class Solution {
public:
    int findKthLargest(vector<int>& nums, int k) {
        priority_queue<int,vector<int>,greater<int>> q;
        for(int i=0;i<nums.size();i++){
            if(q.size()<k){
                q.push(nums[i]);
            }else if(q.size()==k&&q.top()<nums[i]){
                q.pop();
                q.push(nums[i]);
            }
        }
        return q.top();
    }
};

/*priority_queue<int,vector<int>,greater<int>> q  为小顶堆（q.top()为最小的数）
  priority_queue<int,vector<int>,less<int>> q     为大顶堆（q.top()为最大的数）
  */
