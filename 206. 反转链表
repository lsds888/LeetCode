/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* reverseList(ListNode* head) {
        ListNode* dummy=head;
        ListNode* newlist=head;
        if(head==NULL) return head;
        while(head->next!=NULL){
            dummy=head->next;
            head->next=dummy->next;
            dummy->next=newlist;
            newlist=dummy;
        }
        return newlist;
        
    }
};


方法二：
class Solution {
public:
    ListNode* reverse(stack<ListNode*> data)
    {
        ListNode* ans=data.top();
        data.pop();
        if(data.empty())
        {
            ans->next=NULL;
            return ans;
        }
        ans->next=reverse(data);
        return ans;
    }
    ListNode* reverseList(ListNode* head) {
        if(head==NULL)
            return NULL;
        stack<ListNode*> sta;
        ListNode* p=head;
        while(p!=NULL){
            sta.push(p);
            p=p->next;
        }
        return reverse(sta);
    }
};
