给定一个包括 n 个整数的数组 nums 和 一个目标值 target。找出 nums 中的三个整数，使得它们的和与 target 最接近。返回这三个数的和。假定每组输入只存在唯一答案。

例如，给定数组 nums = [-1，2，1，-4], 和 target = 1.

与 target 最接近的三个数的和为 2. (-1 + 2 + 1 = 2).


class Solution {
public:
    int threeSumClosest(vector<int>& nums, int target) {
        if(nums.size()<=3) return accumulate(nums.begin(),nums.end(),0);
        sort(nums.begin(),nums.end());
        int result=nums[0]+nums[1]+nums[2];
        int n=nums.size();
        int temp;
        for(int i=0;i<n;i++){
            int j=i+1;
            int k=n-1;
            while(j<k){
                temp=nums[i]+nums[j]+nums[k];
                if(abs(result-target)>abs(temp-target))
                    result=temp;
                if(result==target)
                    return result;
                temp>target ? k--:j++;
            }
        }
        return result;
    }
};
