给定一个 N 叉树，返回其节点值的前序遍历。

例如，给定一个 3叉树 :

 



 

返回其前序遍历: [1,3,5,6,2,4]。

 

说明: 递归法很简单，你可以使用迭代法完成此题吗?

/*
// Definition for a Node.
class Node {
public:
    int val;
    vector<Node*> children;

    Node() {}

    Node(int _val, vector<Node*> _children) {
        val = _val;
        children = _children;
    }
};
*/
递归：

class Solution {
public:
    vector<int> res;
    void helper(Node*root,vector<int> &res){
        if(root==NULL) return ;
        res.push_back(root->val);
        for(int i=0;i<root->children.size();i++)
            helper(root->children[i],res);
    }
    
    vector<int> preorder(Node* root) {
        helper(root,res);
        return res;
    }
};


执行用时: 68 ms, 在N-ary Tree Preorder Traversal的C++提交中击败了32.19% 的用户


非递归：
    vector<int> preorder(Node* root) {
        vector<int> res;
        if(root==NULL) return res;
        stack<Node*> s;
        s.push(root);
        while(!s.empty()){
            Node* p=s.top();
            s.pop();
            res.push_back(p->val);
            for(int i=p->children.size()-1;i>=0;i--){
                s.push(p->children[i]);
            }
        }
        return res;
    } 
    
    执行用时: 68 ms, 在N-ary Tree Preorder Traversal的C++提交中击败了32.19% 的用户
