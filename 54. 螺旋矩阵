给定一个包含 m x n 个元素的矩阵（m 行, n 列），请按照顺时针螺旋顺序，返回矩阵中的所有元素。

示例 1:

输入:
[
 [ 1, 2, 3 ],
 [ 4, 5, 6 ],
 [ 7, 8, 9 ]
]
输出: [1,2,3,6,9,8,7,4,5]
示例 2:

输入:
[
  [1, 2, 3, 4],
  [5, 6, 7, 8],
  [9,10,11,12]
]
输出: [1,2,3,4,8,12,11,10,9,5,6,7]


class Solution {
public:
    vector<int> spiralOrder(vector<vector<int>>& matrix) {
        vector<int> res;
        if(matrix.empty()||matrix[0].empty())
            return res;
        int h=matrix.size();
        int w=matrix[0].size();
        int left=0,right=w-1,top=0,btm=h-1;
        while(left<=right&&top<=btm){
            for(int i=left;i<=right;i++){
                res.push_back(matrix[top][i]);
            }
            if(top<btm){
                for(int i=top+1;i<=btm;i++){
                    res.push_back(matrix[i][right]);
                }
            }
            if(top<btm&&left<right){
                for(int i=right-1;i>=left;i--){
                    res.push_back(matrix[btm][i]);
                }
            }
            if(top+1<btm&&left<right){
                for(int i=btm-1;i>=top+1;i--){
                    res.push_back(matrix[i][left]);
                }
            }
            left++;
            right--;
            top++;
            btm--;
        }
        return res;
    }
};
