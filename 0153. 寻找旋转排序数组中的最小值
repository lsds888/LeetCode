/*
假设按照升序排序的数组在预先未知的某个点上进行了旋转。

( 例如，数组 [0,1,2,4,5,6,7] 可能变为 [4,5,6,7,0,1,2] )。

请找出其中最小的元素。

你可以假设数组中不存在重复元素。

示例 1:

输入: [3,4,5,1,2]
输出: 1
示例 2:

输入: [4,5,6,7,0,1,2]
*/

#include "head.h"

int findMin(vector<int>& nums) {
    if(nums.size()==1){
        return nums[0];
    }
    int l=0,r=nums.size()-1;
    if(nums[r]>nums[0]){
        return nums[0];
    }
    while(l<=r){
        int mid=l+(r-l)/2;
        if(nums[mid]>nums[mid+1]){
            return nums[mid+1];
        }
        if(nums[mid]<nums[mid-1]){
            return nums[mid];
        }
        if(nums[mid]>nums[r]){
            l=mid+1;
        }else{
            r=mid-1;
        }
    }
    return -1;
}

int main(){
    vector<int> vec={4,5,6,7,8,1,2,3};
    cout<<findMin(vec)<<endl;
    return 0;
}
